#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats
    tune.ssl.default-dh-param 2048

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  dontlognull
    option                  redispatch
    retries                 3
    timeout queue           1m
    timeout connect         10s
    timeout client          30s
    timeout server          30s
    timeout check           10s

#---------------------------------------------------------------------
# main listener which proxys to the backends
#---------------------------------------------------------------------
{% for listener in haproxy_frontend_listeners %}
frontend  {{ listener.protocol }}:{{ listener.listen_port }}
    bind                    *:{{ listener.listen_port }} {{ 'ssl crt '+listener.ssl_certificate if listener.protocol == 'https' }}
    option                  forwardfor
    reqadd                  X-Forwarded-Proto:\ {{ listener.protocol }}
    rspdel                  ^Server:
    default_backend         {{ listener.default_backend if listener.default_backend is defined else 'default' }}

{% endfor %}
#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
{% for target in haproxy_backend_targets %}
backend {{ target.name }}
    mode    {{ target.protocol }}
    balance roundrobin
    {{ 'option  httpchk GET '+target.healthcheck_path if target.healthcheck_path is defined }}
{% for server in target.servers %}
    server  server_{{ loop.index }} {{ hostvars[server].ansible_host if hostvars[server].ansible_host is defined else server }}:{{ target.listen_port }} check
{% endfor %}

{% endfor %}
